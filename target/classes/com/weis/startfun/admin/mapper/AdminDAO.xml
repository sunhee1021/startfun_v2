<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.weis.startfun.admin.model.AdminDAO">
	
	<!-- 개인회원 리스트 -->
	<select id="userList" resultType="MemberVO" parameterType="com.weis.startfun.utils.Criteria">
		select member_email, member_name, member_phone, member_regdate, member_status
		from member
		where member_type='개인'
		limit ${startNum}, ${amount}
	</select>
	<!-- 법인회원 리스트 -->
	<select id="companyList" resultType="MemberVO" parameterType="com.weis.startfun.utils.Criteria">
		select member_email, member_name, member_phone, member_regdate, member_status, member_company
		from member
		where member_type='법인'
		limit ${startNum}, ${amount}
	</select>
	
	<!-- 개인회원 상세보기 -->
	<select id="getList" resultType="MemberVO">
		select member_email, member_password, member_phone, member_status,member_name
		from member
		where member_email = #{member_email}
	</select>
	
	<!-- 개인회원 수정 -->
	<update id="updateUser" parameterType="MemberVO">
		update member
		<set> 
			<if test="member_email != null">member_email=#{member_email},</if>
			<if test="member_phone != null">member_phone=#{member_phone},</if>
			<if test="member_status != null">member_status=#{member_status},</if>
			<if test="member_name != null">member_name=#{member_name},</if>
			<if test="member_password != null">member_password=#{member_password},</if>
		</set>
		where member_email=#{member_email}
	</update>
	
	<!-- 법인회원 상세보기 -->
	<select id="getCompanyList" resultType="MemberVO">
		select member_email, member_password, member_phone, member_status, member_crn, member_brn, 
				member_name, member_company
		from member
		where member_email=#{member_email}
	</select>
	
	<!-- 법인회원 수정 -->
	<update id="updateCompany" parameterType="MemberVO">
		update member
		<set> 
			<if test="member_email != null">member_email=#{member_email},</if>
			<if test="member_phone != null">member_phone=#{member_phone},</if>
			<if test="member_status != null">member_status=#{member_status},</if>
			<if test="member_name != null">member_name=#{member_name},</if>
			<if test="member_password != null">member_password=#{member_password},</if>
			<if test="member_company != null">member_company=#{member_company},</if>
			<if test="member_crn != null">member_crn=#{member_crn},</if>
			<if test="member_brn != null">member_brn=#{member_brn},</if>
			<if test="member_crn != null">member_crn=#{member_crn},</if>				
		</set>
		where member_email = #{member_email}
	</update>
	
	<!-- 개인회원 수 -->
	<select id="getUserCount" resultType="int">
		select count(*) from member where member_type='개인'
	</select>
	
	<!-- 법인회원 수 -->
	<select id="getCompanyCount" resultType="int">
		select count(*) from member where member_type='법인'
	</select>
	
	<!-- 개인회원 검색(이메일) -->
	<select id="searchUser" resultType="MemberVO">
		select member_email, member_name, member_phone, member_regdate, member_status
		 from member where member_email like CONCAT('%',#{member_email},'%')and member_type='개인'
	</select>
	
	<!-- 개인회원 검색(이름) -->
	<select id="searchUserName" resultType="MemberVO">
		select member_email, member_name, member_phone, member_regdate, member_status
		 from member where member_name like CONCAT('%',#{member_name},'%')and member_type='개인'
	</select>
	
	<!-- 법인회원 검색(이메일) -->
	<select id="searchCompany" resultType="MemberVO">
		select member_email, member_name,member_company, member_phone, member_regdate, member_status
		 from member where member_email like CONCAT('%',#{company_email},'%')and member_type='법인'
	</select>
	
	<!-- 법인회원 검색(이름) -->
	<select id="searchCompanyName" resultType="MemberVO">
		select member_email, member_name,member_company, member_phone, member_regdate, member_status
		 from member where member_name like CONCAT('%',#{company_name},'%')and member_type='법인'
	</select>
	
	<!-- 프로젝트 차트 -->
	<select id="chartProject" resultType="HashMap">
		select project_regdate, count(*) as pc from project group by project_regdate
	</select>
	
	<!-- 프로젝트 차트(투자) -->
	<select id="chartInvest" resultType="int">
		select count(*) from project where project_type='투자'
	</select>

	<!-- 프로젝트 차트(후원) -->
	<select id="chartSupport" resultType="int">
		select count(*) from project where project_type='후원'
	</select>
	
	
	<select id="mainProject" resultType="ProjectVO">
		select project_title, project_regdate, project_status
		from project 
		limit ${startNum}, ${amount}
	</select>
	
	<!-- 신청프로젝트 리스트 -->
	<select id="requestList" resultType="ProjectVO">
		select project_no ,p.project_category ,pc.category_name ,p.project_title, 
			p.project_content, p.project_file, p.project_start, p.project_end, p.project_goal, p.project_regdate,
	 	 	p.project_status, p.project_email, p.project_type 
			from project p  
			left join `member` m 
			on p.project_email = m.member_email 
			left join project_category pc 
			on p.project_category = pc.category_code 
			where p.project_status in ('접수','심사중','거절')
			order by p.project_no desc
	</select>
	
	<!-- 승인프로젝트 리스트 -->
	<select id="permissionList" resultType="ProjectVO">
		select project_no ,p.project_category ,pc.category_name ,p.project_title, 
			p.project_content, p.project_file, p.project_start, p.project_end, p.project_goal, p.project_regdate,
	 	 	p.project_status, p.project_email, p.project_type 
			from project p 
			left join `member` m 
			on p.project_email = m.member_email 
			left join project_category pc 
			on p.project_category = pc.category_code 
			where p.project_status in ('승인', '진행중', '진행완료', '정산요청', '정산완료', '신고')
			order by p.project_no desc
	</select>
	
	<!-- 신청프로젝트 검색 (ajax) -->
	<select id="requestAjax" parameterType="com.weis.startfun.utils.Criteria" resultType="ProjectVO">
		select project_no ,p.project_category ,pc.category_name ,p.project_title, 
			p.project_content, p.project_file, p.project_start, p.project_end, p.project_goal, p.project_regdate,
	 	 	p.project_status, p.project_email, p.project_type 
			from project p 
			left join `member` m 
			on p.project_email = m.member_email 
			left join project_category pc 
			on p.project_category = pc.category_code 
			<choose>
                        <when test="category == 'project_title'">
                            where ${category} like CONCAT('%',#{keyword},'%') 
                        </when>
                        <when test="category == 'project_email'">
                            where ${category} like CONCAT('%',#{keyword},'%')
                        </when>
           </choose>
            and p.project_status in ('접수','심사중','거절')
			order by p.project_no desc
			limit #{skip}, #{amount}
	</select>
    
    <!-- 승인프로젝트 검색 (ajax) -->
	<select id="permitAjax" parameterType="com.weis.startfun.utils.Criteria" resultType="ProjectVO">
		select project_no ,p.project_category ,pc.category_name ,p.project_title, 
			p.project_content, p.project_file, p.project_start, p.project_end, p.project_goal, p.project_regdate,
	 	 	p.project_status, p.project_email, p.project_type 
			from project p 
			left join `member` m 
			on p.project_email = m.member_email 
			left join project_category pc 
			on p.project_category = pc.category_code 
			<choose>
                        <when test="category == 'project_title'">
                            where ${category} like CONCAT('%',#{keyword},'%') 
                        </when>
                        <when test="category == 'project_email'">
                            where ${category} like CONCAT('%',#{keyword},'%')
                        </when>
           </choose>
            and p.project_status in ('승인', '진행중', '진행완료', '정산요청', '정산완료', '신고')
			order by p.project_no desc
			limit #{skip}, #{amount}
	</select>
 	
    <!-- 신청프로젝트 목록(페이징) -->
    <select id="getRequestPaging" parameterType="com.weis.startfun.utils.Criteria"  resultType="ProjectVO">
    
       select project_no ,p.project_category ,pc.category_name ,p.project_title, 
			p.project_content, p.project_file, p.project_start, p.project_end, p.project_goal, p.project_regdate,
	 	 	p.project_status, p.project_email, p.project_type 
			from project p  
			left join `member` m 
			on p.project_email = m.member_email 
			left join project_category pc 
			on p.project_category = pc.category_code 
			where p.project_status in ('접수','심사중','거절')
			<choose>
                        <when test="category == 'project_title'">
                            and ${category} like CONCAT('%',#{keyword},'%') 
                        </when>
                        <when test="category == 'project_email'">
                            and ${category} like CONCAT('%',#{keyword},'%')
                        </when>
           </choose>
			order by p.project_no desc
        	limit #{skip}, #{amount}
        	
    </select>
 
	<!-- 승인프로젝트 목록(페이징) -->
    <select id="getPermitPaging" parameterType="com.weis.startfun.utils.Criteria"  resultType="ProjectVO">
    
       select project_no ,p.project_category ,pc.category_name ,p.project_title, 
			p.project_content, p.project_file, p.project_start, p.project_end, p.project_goal, p.project_regdate,
	 	 	p.project_status, p.project_email, p.project_type 
			from project p 
			left join `member` m 
			on p.project_email = m.member_email 
			left join project_category pc 
			on p.project_category = pc.category_code 
			where p.project_status in ('승인', '진행중', '진행완료', '정산요청', '정산완료', '신고')
			<choose>
                        <when test="category == 'project_title'">
                            and ${category} like CONCAT('%',#{keyword},'%') 
                        </when>
                        <when test="category == 'project_email'">
                            and ${category} like CONCAT('%',#{keyword},'%')
                        </when>
           </choose>
			order by p.project_no desc
        	limit #{skip}, #{amount}
        	
    </select>
 
 	<!-- 게시물 총 개수 -->
    <select id="totalListCount" resultType="int">
       select count(*) from project
    </select> 
 	
 	<!-- 신청프로젝트 총 개수 -->
 	 <select id="totalRequestCount" resultType="int">
       select count(*) from project 
       where project_status in ('접수','심사중','거절') 
    </select> 
 
    <!-- 신청프로젝트 총 검색 개수 -->
    <select id="searchRequestTotal" parameterType="com.weis.startfun.utils.Criteria" resultType="int">
       select count(*) from project
       where project_status in ('접수','심사중','거절')  
        <if test="keyword != null">
			<choose>
                <when test="category == 'project_title'">
                    and ${category} like CONCAT('%',#{keyword},'%') 
                </when>
                <when test="category == 'project_email'">
                    and ${category} like CONCAT('%',#{keyword},'%')
                </when>
           </choose>
        </if>
    </select> 
    
    <!-- 승인프로젝트 총 개수 -->
 	 <select id="totalPermitCount" resultType="int">
       select count(*) from project 
       where project_status in ('승인', '진행중', '진행완료', '정산요청', '정산완료', '신고')
    </select> 
 
 
    <!-- 승인프로젝트 총 검색 개수 -->
    <select id="searchPermitTotal" parameterType="com.weis.startfun.utils.Criteria" resultType="int">
       select count(*) from project 
       where project_status in ('승인', '진행중', '진행완료', '정산요청', '정산완료', '신고')
        <if test="keyword != null">
			<choose>
                <when test="category == 'project_title'">
                    and ${category} like CONCAT('%',#{keyword},'%') 
                </when>
                <when test="category == 'project_email'">
                    and ${category} like CONCAT('%',#{keyword},'%')
                </when>
           </choose>
        </if>
    </select> 
	
	<!-- 신고내역 리스트 -->
	<select id="reportList" resultType="ReportVO">
		select report_no, r.project_no, r.report_email, r.report_code, p.project_status,
			rc.report_category , report_reason , report_regdate 
			from report r 
			left join project p 
			on r.project_no = p.project_no  
			left join `member` m 
			on r.report_email = m.member_email
			left join report_category rc 
			on rc.report_code = r.report_code 
			where r.project_no = #{project_no}
			order by r.report_regdate desc
	</select>
	
	<!-- 신고건수 -->
	<select id="getReportCount" resultType="int">
      select count(*) 
      from report r 
      where project_no=#{project_no}
   </select>
	
	<!-- 신청프로젝트 상태 변경 -->
	<update id="updateStatus" parameterType="hashmap">
		update project 
		set project_status = #{projectStatus} 
		where project_no = #{projectNo}
	</update>
	
	<!-- 정산상태 변경 : 정산완료 -->
	<update id="updatePayment" parameterType="ProjectVO">
		update project 
		set project_status = "정산완료"
		where project_no = #{project_no}
	</update>
	
	<!-- 신고상태 변경 : 신고 -->
	<update id="updateReport" parameterType="ProjectVO">
		update project 
		set project_status = "신고"
		where project_no = #{projectNo}
	</update>
</mapper>