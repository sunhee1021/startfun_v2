<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
설 명 : JoinSupport mapper 
작성일 : 2021.06.08
작성자 : 이보희 
-->
<mapper namespace="com.weis.startfun.project.model.JoinSupportDAO"> 

	<!-- 후원형 프로젝트 리스트--> 
	<resultMap type="ProjectVO" id="projectMap2">
		<result property="project_no" column="project_no" />
		<result property="project_thumbnail" column="project_thumbnail" />
	    <result property="project_title" column="project_title" />
	    <result property="project_start" column="project_start" />
	    <result property="project_end" column="project_end" />
	    <result property="project_status" column="project_status" />
	    <result property="project_type" column="project_type" />
	    <result property="sponsor_count" column="sponsor_count" />
		<result property="dday" column="dday" />
		<result property="total" column="total" />
		<result property="rate" column="rate" />
		<result property="done" column="done" />
		<association property="memberVO" resultMap="memberMap2" />
		<association property="projectCategoryVO" resultMap="projectCategoryMap2" />
	</resultMap>
	
	<resultMap type="MemberVO" id="memberMap2">
		<result property="member_name" column="member_name" />
		<result property="member_profile" column="member_profile" />
	</resultMap>
	
	<resultMap type="ProjectCategoryVO" id="projectCategoryMap2">
		<result property="category_name" column="category_name" />
	</resultMap>

	<select id="getSupportList" resultMap="projectMap2">
		select 
			p.project_no,
			p.project_thumbnail, 
			m.member_name, 
			m.member_profile,
			pc.category_name, 
			p.project_title, 
			ifnull(sum(js.support_amount),0)+ifnull(sum(js.support_add_amount),0) as "total",
			TRUNCATE(((ifnull(sum(js.support_amount),0)+ifnull(sum(js.support_add_amount),0))/p.project_goal )*100,0) AS "rate",
			TO_DAYS(project_end)-TO_DAYS(CURRENT_DATE()) as "dday",  
			count(js.sponsor_email) as "sponsor_count", 
		    p.project_start, 
		    p.project_end,
		    p.project_status,
		    p.project_type,
		    CASE
				WHEN project_end >= CURRENT_DATE()
				THEN '1'
				ELSE '0'
			END AS "done"
		from project p
			join member m on p.project_email = m.member_email
			join project_category pc on p.project_category = pc.category_code
			left join join_support js on js.project_no = p.project_no
		where
			<include refid="criteria"></include>
		group by  p.project_no
		order by
	    <choose>
	        <when test="listSort == 'total'">done desc, total desc</when>                     
	        <when test="listSort == 'project_end'">done desc, p.project_end</when>        
	        <when test="listSort == 'project_start'">done desc, p.project_start desc</when>   
	        <when test="listSort == 'sponsor_count'">done desc, sponsor_count desc</when>         
	        <otherwise>done desc, total desc</otherwise>
	    </choose>
	    limit ${startNum}, ${amount}
	</select>


	<!-- 후원형 프로젝트 상세페이지(상단) -->
	<resultMap type="ProjectVO" id="projectMap">
		<result property="project_no" column="project_no" />
		<result property="project_title" column="project_title" />
		<result property="project_thumbnail" column="project_thumbnail" />
		<result property="project_video" column="project_video" />
		<result property="project_content" column="project_content" />
		<result property="project_file" column="project_file" />
		<result property="project_status" column="project_status" />
		<result property="sponsor_count" column="sponsor_count" />
		<result property="dday" column="dday" />
		<result property="total" column="total" />
		<result property="rate" column="rate" />
		<association property="memberVO" resultMap="memberMap" />
		<association property="projectCategoryVO" resultMap="projectCategoryMap" />
	</resultMap>
	
	<resultMap type="MemberVO" id="memberMap">
		<result property="member_profile" column="member_profile" />
		<result property="member_name" column="member_name" />
		<result property="member_email" column="member_email" />
	</resultMap>
	
	<resultMap type="ProjectCategoryVO" id="projectCategoryMap">
		<result property="category_name" column="category_name" />
	</resultMap>
	
	<select id="getSupportDetailTop" resultMap="projectMap">
		select 
			p.project_no,
			pc.category_name, 
			p.project_title, 
			p.project_thumbnail,
			p.project_video,
			p.project_content,
			p.project_file, 
			m.member_email,
			m.member_profile,
			m.member_name,
			ifnull(sum(js.support_amount),0)+ifnull(sum(js.support_add_amount),0) as "total",
			TRUNCATE(((ifnull(sum(js.support_amount),0)+ifnull(sum(js.support_add_amount),0))/p.project_goal )*100,0) AS "rate",
			count(p.project_email) as "sponsor_count",
			TO_DAYS(project_end)-TO_DAYS(CURRENT_DATE()) as "dday",
			p.project_status 
		from project p
			join member m on p.project_email = m.member_email
			join project_category pc on p.project_category = pc.category_code
			join join_support js on js.project_no = p.project_no
		where p.project_no = #{project_no}
	</select>


	<!-- 후원형 프로젝트 상세페이지(옵션창) -->
	<select id="getSupportOption" resultType="RewardVO">
		select 
		   	reward_no,
			reward_price, 
			reward_compose, 
			ifnull(due_date,'미배송형') as "due_date", 
			ifnull(reward_charge, 0) as "reward_charge", 
			ifnull(vjs.sponsor_count,0) as "sponsor_count" 
		from reward r 
			left outer join 
				(
				select 
					support_reward, 
					count(sponsor_email) as "sponsor_count" 
				from join_support 
				where project_no = #{project_no}
				group by support_reward
				) vjs
			on r.reward_no = vjs.support_reward
		where project_no = #{project_no}
	</select>
	
	<!-- 신고여부 확인 -->
	<select id="checkReport" resultType="ReportVO">
		select report_no from report where project_no = #{project_no} and report_email = #{report_email}
	</select>
	
	<!-- 신고하기 -->
	<insert id="report" parameterType="ReportVO">
	 	insert into report(project_no, report_email, report_code, report_reason, report_regdate) 
	 	values (${project_no}, #{report_email}, #{report_code}, #{report_reason}, now())
	</insert>
		
	
	<!-- 후원하기 다음단계(옵션선택) -->
	<resultMap type="RewardVO" id="rewardMap">
		<result property="project_no" column="project_no" />
		<result property="reward_compose" column="reward_compose" />
		<result property="reward_price" column="reward_price" />
		<result property="reward_charge" column="reward_charge" />
		<result property="due_date" column="due_date" />
		<result property="reward_no" column="reward_no" />
		<association property="projectVO" resultMap="projectMap7" />
	</resultMap>
	
	<resultMap type="ProjectVO" id="projectMap7">
		<result property="project_title" column="project_title" />
	</resultMap>
	
	<select id="joinSupportOption" parameterType="RewardVO" resultMap="rewardMap">
		select r.project_no, r.reward_compose, r.reward_price, r.reward_charge, r.due_date, r.reward_no, p.project_title 
		from reward r join project p on r.project_no = p.project_no 
		where r.project_no = #{project_no} and r.reward_no = #{reward_no} 
	</select>
	
	
	<!-- 후원하기 처리 -->
	<insert id="joinSupport" parameterType="JoinSupportVO">
		insert into join_support(project_no, sponsor_email, support_dt, support_reward, support_amount, support_add_amount,
								 reward_status, support_status, ship_name, ship_phone, ship_address, ship_memo)
		values (#{project_no}, #{sponsor_email}, now(), #{support_reward}, #{support_amount}, #{support_add_amount},
				'-', '결제예정', #{ship_name}, #{ship_phone}, #{ship_address}, #{ship_memo})
	</insert>
	
	
	<!-- 후기탭(항목별 평균) -->
	<select id="getReviewAvg" resultType="ReviewVO">
		select round(avg(review_score),1) as "review_avg", 
			   (select count(distinct(review_email)) from review where project_no = #{project_no}) as "review_count"
		from review
		where project_no = #{project_no}
		group by review_code
	</select>

	
	<!-- 팔로우 번호 찾기 -->
	<select id="searchFollowing_no" resultType="FollowingVO">
		select following_no from following where from_user = #{from_user} and to_user = #{to_user}
	</select>
	
	
	<!-- 팔로우 이메일 찾기 -->
	<select id="searchEmail" resultType="ProjectVO">
		select project_email from project where project_no = #{project_no}
	</select>
	
	
	<!-- 팔로우하기 -->
	<insert id="doFollow" parameterType="FollowingVO">
    	insert into following (to_user, from_user) 
    	values (#{to_user}, #{from_user})
	</insert>
	
	
	<!-- 팔로우 취소하기 -->
	<delete id="delFollow">
		delete from following where following_no = #{following_no}
	</delete>
	
	
	<!-- 관심프로젝트 번호찾기 -->
	<select id="searchWish_no" resultType="WishVO">
		select wish_no from wish where project_no = #{project_no} and email = #{email}
	</select>
	
	
	<!-- 관심프로젝트 설정하기 -->
	<insert id="doWishProject" parameterType="WishVO">
    	insert into wish(project_no, email) 
    	values(#{project_no}, #{email})
	</insert>
	
	
	<!-- 관심프로젝트 취소하기 -->
	<delete id="delWishProject">
		delete from wish where wish_no = #{wish_no}
	</delete>
	
	
	<!-- 리워드 정책 -->
	<select id="searchGuide" resultType="SupportVO">
		select delivery_guide, delivery_delay, refund_policy from support where project_no = #{project_no}
	</select>
	
	<!-- 로그인 사용자 타입구분(일반/법인) -->
	<select id="searchMember_Type" resultType="MemberVO">
		select member_type from member where member_email = #{member_email}
	</select>
	
	<!-- 프로젝트 개수 -->
	<select id="getProjectCount" resultType="int">
		select count(*) 
		from project p
			join project_category pc on p.project_category = pc.category_code
		where 
			<include refid="criteria"></include>
	</select>
	
	
	<!-- criteria -->
	<sql id="criteria">
		<trim suffixOverrides="AND">
			project_type = '후원' and project_status in ('승인', '진행중', '진행완료', '정산요청', '정산완료') and 
			project_start <![CDATA[<=]]> CURRENT_DATE() AND
			 <choose>
	            <when test="category == '공간/리빙'">
	            	category_name = '공간/리빙' AND
	            </when>                     
	            <when test="category == '사회이슈'">
	            	category_name = '사회이슈' AND
	            </when>        
	            <when test="category == '교육/출판'">
	            	category_name = '교육/출판' AND
	            </when>   
	            <when test="category == '문화예술'">
	            	category_name = '문화예술' AND
	            </when>         
	            <when test="category == '지역재생'">
	            	category_name = '지역재생' AND
	            </when>
	            <when test="category == '푸드'">
	            	category_name = '푸드' AND
	            </when>
	            <when test="category == '테크'">
	            	category_name = '테크' AND
	            </when>
	            <when test="category == '뷰티/패션'">
	            	category_name = '뷰티/패션' AND
	            </when>
	            <when test="category == '여행'">
	            	category_name = '여행' AND
	            </when>
			</choose>	
		</trim>
	</sql>
	
</mapper>