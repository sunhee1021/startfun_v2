<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.weis.startfun.member.model.MemberDAO">

		<!-- 개인 회원가입 -->
 		<insert id="insert_member">
			insert into member(member_email, member_password, member_name, member_phone, member_regdate, member_profile,member_introduce, 
								member_status, member_type, member_sns, member_company, member_brn, member_crn, member_enabled, member_emailkey)
			 values(#{member_email},#{member_password},#{member_name},#{member_phone},NOW(),'default.jpg',#{member_introduce},
					"활동","개인",#{member_sns},#{member_company},#{member_brn},#{member_crn},"1",#{member_emailkey})
		</insert> 
		
		<!-- 개인 회원가입 권한주기 -->
		 <insert id="insert_member_auth">
			insert into member_auth(authority_code,email)
			values(2,#{member_email})
		</insert>  
		
		<!-- 법인 회원가입 -->
		<insert id="company_insert_member">
			insert into member(member_email, member_password, member_name, member_phone, member_regdate, member_profile,member_introduce, 
								member_status, member_type, member_sns, member_company, member_brn, member_crn, member_enabled, member_emailkey)
			 values(#{member_email},#{member_password},#{member_name},#{member_phone},NOW(),'default.jpg',#{member_introduce},
					"활동","법인",#{member_sns},#{member_company},#{member_brn},#{member_crn},"1",#{member_emailkey})
		</insert> 
		
		<!-- 법인 회원가입 권한주기 -->
		<insert id="insert_company_auth">
			insert into member_auth(authority_code,email)
			values(3,#{member_email})
		</insert>
		
		<!-- 아이디 체크 -->
		<select id="idCheck" resultType="int">
			select count(*) from member where member_email = #{member_email}
		</select>
		
		<!-- 법인 아이디 체크 -->
		<select id="companyIdCheck" resultType="int">
			select count(*) from member where member_email = #{company_email}
		</select>
		
		<!-- 아이디찾기 가입정보확인 -->
		<select id ="searchUserInfo" resultType="int">
			select count(*) from member where  member_name = #{param1} and member_phone = #{param2}
		</select>
		
		<!-- 아이디 찾기 -->
		<select id ="searchId" resultType="MemberVO">
			select member_email, member_regdate from member where member_name = #{member_name} and member_phone = #{member_phone}
		</select>
		
		<!-- 비밀번호 찾기 인증키 -->
		<update id="updateAuthKey" parameterType="MemberVO">
			update member set member_emailkey = #{member_emailkey} where member_email = #{member_email} 
			and (select count(*) from member where member_email = #{member_email}) &gt; 0
		</update>
		
		<!-- 비밀번호 인증키 확인 -->
		<select id="confirmAuthKey" resultType="MemberVO">
			select member_email, member_emailkey from member where member_email = #{member_email}
		</select>
		
		<!-- 비밀번호 변경 -->
		<update id="updatePassword" parameterType="MemberVO">
			update member set member_password = #{member_password} where member_email = #{member_email};
		</update>		
		
</mapper>